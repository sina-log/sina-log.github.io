# .github/workflows/deploy.yml

name: Build and Deploy JBake Site

# 'source' 브랜치에 push 이벤트가 발생했을 때 이 워크플로우를 실행합니다.
on:
  push:
    branches:
      - source

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 'source' 브랜치의 코드를 체크아웃합니다.
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2. JBake를 실행하여 정적 사이트를 빌드합니다.
      #    - jbake/jbake Docker 이미지를 사용합니다.
      #    - 현재 워크스페이스(${{ github.workspace }})를 컨테이너의 /source 디렉토리에 마운트합니다.
      #    - /source 디렉토리에서 빌드를 실행하고, 결과물은 /source/output에 생성됩니다.
      - name: Build with JBake
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/source \
            jbake/jbake \
            -b /source

      # 3. 빌드된 사이트를 'main' 브랜치에 배포합니다.
      #    - peaceiris/actions-gh-pages 액션을 사용합니다.
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # 배포를 위해 GitHub에서 자동으로 생성해주는 토큰입니다.
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 배포할 파일이 들어있는 디렉토리입니다. (JBake의 기본 출력 폴더)
          publish_dir: ./output
          # 배포할 브랜치 이름입니다. 사용자 페이지는 'main'을 사용해야 합니다.
          publish_branch: main
          # 커밋 메시지에 포함될 사용자 이름과 이메일입니다.
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'